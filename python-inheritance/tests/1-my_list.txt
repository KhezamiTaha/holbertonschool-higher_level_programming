"""
>>> MyList = __import__('1-my_list').MyList
>>> my_list = MyList()
>>> my_list.print_sorted()
[]

# Test list with integers
>>> my_list = MyList([3, 1, 2])
>>> my_list.print_sorted()
[1, 2, 3]

# Test list with strings
>>> my_list = MyList(['apple', 'banana', 'orange'])
>>> my_list.print_sorted()
['apple', 'banana', 'orange']

# Test list with mixed types
>>> my_list = MyList([3, 'apple', 2.5])
>>> my_list.print_sorted()
Traceback (most recent call last):
TypeError: '<' not supported between instances of 'str' and 'int'

# Test list with duplicate elements
>>> my_list = MyList([3, 1, 2, 1, 3])
>>> my_list.print_sorted()
[1, 1, 2, 3, 3]

>>> my_list = MyList()
>>> my_list.append(-1)
>>> my_list.print_sorted()
[-1]


>>> my_list = MyList()
>>> my_list.append(None)
>>> my_list.print_sorted()
[None]

>>my_list = MyList()
>>my_list.append('test')
>>my_list.print_sorted()
['test']

>>> my_list = MyList()
>>> my_list.append('test')
>>> my_list.append(50)
>>> my_list.append(-55)
>>> my_list.append(95.26)
>>> my_list.print_sorted()
Traceback (most recent call last):
TypeError: '<' not supported between instances of 'int' and 'str'

>>> my_list = MyList()
>>> my_list.append(50)
>>> my_list.append(-55)
>>> my_list.append(95.26)
>>> my_list.print_sorted()
[-55, 50, 95.26]

>>> my_list = MyList()
>>> my_list.append([-55, 50, 95.26])
>>> my_list.append([100, 9, 5])
>>> my_list.print_sorted()
[[-55, 50, 95.26], [100, 9, 5]]

>>> my_list = MyList()
>>> my_list.append([100, 9, 5])
>>> my_list.append(95.26)
>>> my_list.print_sorted()
Traceback (most recent call last):
TypeError: '<' not supported between instances of 'float' and 'list'

>>> my_list = MyList()
>>> my_list.append([100, 9, 5])
>>> my_list.append(95)
>>> my_list.print_sorted()
Traceback (most recent call last):
TypeError: '<' not supported between instances of 'int' and 'list'

>>> my_list = MyList()
>>> my_list.append("Hi")
>>> my_list.append("test")
>>> my_list.print_sorted()
['Hi', 'test']

>>> my_list = MyList()
>>> my_list.print_sorted()
[]

>>> my_list = MyList()
>>> type(my_list)
<class '1-my_list.MyList'>

>>> my_list = MyList([1, 2, 3])
>>> print(my_list)
[1, 2, 3]

>>> my_list = MyList([1, 2], [3, 4])
Traceback (most recent call last):
TypeError: list expected at most 1 argument, got 2

>>> my_list[0] = 5
>>> print(my_list)
[5, 2, 3]

>>> my_list.remove(5)
>>> print(my_list)
[2, 3]

>>> my_list = MyList()
>>> print(my_list.print_sorted)
<bound method MyList.print_sorted of []>

>>> my_list = MyList()
>>> my_list.append("Brennan")
>>> my_list.append("Poppy")
>>> my_list.append("School")
>>> my_list.append("Holberton")
>>> my_list.append("Betty")
>>> print(my_list)
['Brennan', 'Poppy', 'School', 'Holberton', 'Betty']

::

    >>> my_list.print_sorted()
    ['Betty', 'Brennan', 'Holberton', 'Poppy', 'School']


::

    >>> print(my_list)
    ['Brennan', 'Poppy', 'School', 'Holberton', 'Betty']

Nothing to sort with empty lists.

::

    >>> my_list = MyList()
    >>> my_list.print_sorted()
    []

"""